DROP TABLE IF EXISTS USERS;

-- 사용자 테이블
CREATE TABLE USERS (
	ID		    		INT							NOT NULL AUTO_INCREMENT,
	EMAIL				VARCHAR(40)					NOT NULL,
	PASSWORD			VARCHAR(255)				NOT NULL,
	NAME				VARCHAR(12)					NOT NULL,
	PHONE				VARCHAR(11)					NOT NULL,
	ENABLED				TINYINT(1)					NOT NULL,
	LOGIN_TYPE			VARCHAR(5)					NOT NULL,
	CREATED_AT			DATETIME					NOT NULL DEFAULT NOW(),
	UPDATED_AT			DATETIME					NOT NULL,
	DELETE_YN			CHAR(1)						NOT NULL DEFAULT 'N',
	DELETED_AT			DATETIME					DEFAULT NULL,
	PRIMARY KEY (ID)
);


DROP TABLE IF EXISTS USER_ROLES;

-- 사용자별 권한관리 테이블
CREATE TABLE USER_ROLES (
	USER_ID				INT							NOT NULL,
	ROLE				VARCHAR(20)					NOT NULL,
	DELETE_YN			CHAR(1)						NOT NULL DEFAULT 'N',
	DELETED_AT			DATETIME					DEFAULT NULL,
	CREATED_AT			DATETIME					NOT NULL DEFAULT NOW(),
	UPDATED_AT			DATETIME					NOT NULL,
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON UPDATE CASCADE ON DELETE CASCADE
);


DROP TABLE IF EXISTS USER_PROFILES;

-- 사용자 프로필 테이블
CREATE TABLE USER_PROFILES (
	PROFILE_ID					INT					NOT NULL AUTO_INCREMENT,
	USER_ID						INT					NOT NULL,
	PROFILE_IMG_PATH			VARCHAR(255)		NOT NULL DEFAULT 'NONE',
	PROFILE_IMG_NAME			VARCHAR(255)		NOT NULL DEFAULT 'NONE',
	PROFILE_IMG_ORIGIN_NAME		VARCHAR(255)		NOT NULL DEFAULT 'NONE',
	PROFILE_IMG_SIZE			INT					NOT NULL DEFAULT 0,
	GENDER						CHAR(1)				NOT NULL,
	UNIV						VARCHAR(45)			NOT NULL DEFAULT 'NONE',
	CITY						VARCHAR(18)			NOT NULL DEFAULT 'NONE',
	CREATED_AT					DATETIME			NOT NULL DEFAULT NOW(),
	UPDATED_AT					DATETIME			NOT NULL,
	PRIMARY KEY (PROFILE_ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON UPDATE CASCADE ON DELETE CASCADE
);


DROP TABLE IF EXISTS LOGIN_HISTORY;

-- 로그인 이력 테이블
CREATE TABLE LOGIN_HISTORY (
	HISTORY_ID					INT					NOT NULL AUTO_INCREMENT,
	USER_ID						INT					NOT NULL,
	CLIENT_IP					VARCHAR(255)		NOT NULL,
	USER_AGENT					VARCHAR(255)		NOT NULL,
	LOGIN_AT					DATETIME			NOT NULL,
	PRIMARY KEY (HISTORY_ID)
);


DROP TABLE IF EXISTS TEAMS;

-- 팀 정보 테이블
CREATE TABLE TEAMS (
	TEAM_ID						INT					NOT NULL AUTO_INCREMENT,
	NAME						VARCHAR(50)			NOT NULL,
	INTRODUCTION				VARCHAR(150)		NOT NULL,
	DELETE_YN					CHAR(1)				NOT NULL,
	DELETED_AT					DATETIME			DEFAULT NULL,
	CREATED_AT					DATETIME			NOT NULL DEFAULT NOW(),
	UPDATED_AT					DATETIME			NOT NULL,
	PRIMARY KEY (TEAM_ID)
);


DROP TABLE IF EXISTS TEAM_USERS;

-- 팀원 테이블
CREATE TABLE TEAM_USERS (
	TEAM_ID						INT					NOT NULL,
	USER_ID						INT					NOT NULL,
	IS_CAPTAIN					CHAR(1)				NOT NULL DEFAULT 'N',
	CREATED_AT					DATETIME			NOT NULL DEFAULT NOW(),
	UPDATED_AT					DATETIME			NOT NULL,
	FOREIGN KEY (TEAM_ID) REFERENCES TEAMS (TEAM_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON UPDATE CASCADE ON DELETE CASCADE
);


DROP TABLE IF EXISTS PROJECTS;

-- 프로젝트 정보 테이블
CREATE TABLE PROJECTS (
	PROJECT_ID					INT					NOT NULL AUTO_INCREMENT,
	NAME						VARCHAR(165)		NOT NULL,
	TEAM_ID						INT					NOT NULL,
	USER_ID						INT					NOT NULL,
	STATUS						VARCHAR(5)			NOT NULL,
	STARTED_AT					DATETIME			NOT NULL,
	ENDED_AT					DATETIME			NOT NULL,
	CREATED_AT					DATETIME			NOT NULL DEFAULT NOW(),
	UPDATED_AT					DATETIME			NOT NULL,
	DELETE_YN					CHAR(1)				NOT NULL DEFAULT 'N',
	DELETED_AT					DATETIME			DEFAULT NULL,
	PRIMARY KEY (PROJECT_ID),
	FOREIGN KEY (TEAM_ID) REFERENCES TEAMS (TEAM_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON UPDATE CASCADE ON DELETE CASCADE
);


DROP TABLE IF EXISTS TASKS;

-- 업무 테이블
CREATE TABLE TASKS (
    TASK_ID                     INT					NOT NULL AUTO_INCREMENT,
    NAME                        VARCHAR(50) 		NOT NULL,
    SORT                        INT					NOT NULL DEFAULT 0,
    USE_YN                      CHAR(1)				NOT NULL DEFAULT 'Y',
    CREATED_AT                  DATETIME			NOT NULL DEFAULT NOW(),
    UPDATED_AT                  DATETIME			NOT NULL,
    PRIMARY KEY (TASK_ID)
);